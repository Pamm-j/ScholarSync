import React from 'react';
import {
  GradeType,
  GmailButtonProps,
  DetailedStudentType
} from '../../types/types';

const GmailButton: React.FC<GmailButtonProps> = ({ student }) => {
  const overEighty = (grade: GradeType) => {
    if (!grade.score || !grade.possible_points) return false;
    return grade.score / grade.possible_points >= 0.8;
  };

  const handleButtonClick = async () => {
    const capitalizeName = (name: string) =>
      name
        .split(' ')
        .map(
          (word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()
        )
        .join(' ');

    const studentNameCapitalized = capitalizeName(student.name);

    const formatAssignmentRow = (assignment: GradeType) => {
      const scoreText =
        assignment.score === null
          ? ` /${assignment.possible_points}`
          : `${assignment.score}/${assignment.possible_points}`;
      return `*  ${scoreText} | ${assignment.assignment_name}`;
    };

    const majorAssignments = student.p4_grades
      .filter(
        (grade) =>
          grade.progress_report_period_name === 'P4' &&
          grade.grade_category_name === 'Major'
      )
      .map(formatAssignmentRow)
      .join('\n');

    const minorAssignments = student.p4_grades
      .filter(
        (grade) =>
          grade.progress_report_period_name === 'P4' &&
          grade.grade_category_name === 'Minor' &&
          !overEighty(grade)
      )
      .map(formatAssignmentRow)
      .join('\n');

    const extraMessage = (student: DetailedStudentType) => {
      let message = '';
      if (student.p4score < 70) {
        message +=
          ' I am concerned about your progress, you need to make up any missing work or submit quiz corrections by 2/20.\n\n ';
      }
      return message;
    };

    const gradeInfo = `Your current score is ${Math.round(student.p4score * 10) / 10} in Algebra 2 for P4.${extraMessage(student)} `;

    const emailBody = `Hello ${studentNameCapitalized},\n\nI hope this email finds you well. ${gradeInfo}For your reference, I will list any assignments that may need your attention.\n\nP4 Major assignments and scores:\n${majorAssignments}\n\nP4 Minor assignments and scores that are under a B:\n${minorAssignments}\n\nBest regards,\nMs. T\n\nThis email was generated by my app, ScholarSync.`;

    // Encode the entire email body to ensure line breaks are recognized
    const encodedEmailBody = encodeURIComponent(emailBody);

    const mailtoLink = `https://mail.google.com/mail/?view=cm&fs=1&to=${student.email}&su=${encodeURIComponent('Current Grades for P4')}&body=${encodedEmailBody}`;

    window.open(mailtoLink, '_blank');

    // Wait for a short time before processing the next student to prevent mail clients from blocking the pop-ups
    await new Promise((resolve) => setTimeout(resolve, 500));
  };

  return (
    <button
      className="bg-pink-500 text-white py-1 px-3 rounded-lg focus:outline-none hover:bg-pink-600 active:bg-pink-700 mr-2"
      onClick={handleButtonClick}
    >
      Email {student.name}
    </button>
  );
};

export default GmailButton;
